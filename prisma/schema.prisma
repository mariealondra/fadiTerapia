generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

// model Student {
//   id        Int      @id @default(autoincrement())
//   name      String
//   birthDate DateTime
//   career    String
// }

model Patient {
  id                Int                 @id @default(autoincrement())
  name              String
  lastname          String
  email             String              @unique
  password          String
  age               Int
  address           String
  telephoneNumber   String
  condition         String
  therapist         Therapist?          @relation(fields: [therapistId], references: [id])
  therapistId       Int?
  exerciseExecution ExerciseExecution[]
}

model Therapist {
  id       Int       @id @default(autoincrement())
  name     String
  lastname String?
  email    String    @unique
  password String
  patients Patient[]
}

model Exercise {
  id                 Int                 @id @default(autoincrement())
  name               String
  description        String
  exerciseExecutions ExerciseExecution[]
}

model ExerciseExecution {
  id         Int      @id @default(autoincrement())
  patient    Patient  @relation(fields: [patientId], references: [id])
  patientId  Int
  graph      Graph?
  exercise   Exercise @relation(fields: [exerciseId], references: [id])
  exerciseId Int
}

model Graph {
  id                  Int               @id @default(autoincrement())
  title               String
  image               String
  measures            Measure[]
  exerciseExecution   ExerciseExecution @relation(fields: [exerciseExecutionId], references: [id])
  exerciseExecutionId Int               @unique
}

model Measure {
  id        Int      @id @default(autoincrement())
  voltage   Decimal
  timestamp DateTime
  graph     Graph    @relation(fields: [graphId], references: [id])
  graphId   Int
}